# Generated by Django 4.2.7 on 2025-09-06 12:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning_app', '0003_userprofile_quizsession_quizattempt_quizanalysis_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('quiz_code', models.CharField(blank=True, max_length=8, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('ended', 'Ended')], default='draft', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('time_limit', models.IntegerField(default=30, help_text='Time limit in minutes')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_participants', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('difficult_questions', models.JSONField(default=list, help_text='Questions with low success rate')),
                ('common_mistakes', models.JSONField(default=dict, help_text='Word cloud data for common wrong answers')),
                ('topic_performance', models.JSONField(default=dict, help_text='Performance by topic')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='learning_app.livequiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('is_correct', models.BooleanField(default=False)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100)),
                ('student_email', models.EmailField(max_length=254)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='learning_app.livequiz')),
            ],
            options={
                'unique_together': {('quiz', 'student_email')},
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('true_false', 'True/False')], default='mcq', max_length=15)),
                ('option_a', models.CharField(blank=True, max_length=500)),
                ('option_b', models.CharField(blank=True, max_length=500)),
                ('option_c', models.CharField(blank=True, max_length=500)),
                ('option_d', models.CharField(blank=True, max_length=500)),
                ('correct_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('explanation', models.TextField(blank=True)),
                ('generation_method', models.CharField(choices=[('manual', 'Manual'), ('llm_text', 'LLM from Text'), ('llm_pdf', 'LLM from PDF')], default='manual', max_length=15)),
                ('source_text', models.TextField(blank=True, help_text='Source text used for LLM generation')),
                ('order', models.PositiveIntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning_app.livequiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weak_topics', models.JSONField(default=list, help_text='Topics where student performed poorly')),
                ('strong_topics', models.JSONField(default=list, help_text='Topics where student performed well')),
                ('recommendations', models.TextField(blank=True)),
                ('reading_material', models.TextField(blank=True)),
                ('practice_questions', models.JSONField(default=list, help_text='Additional practice questions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='learning_app.quizparticipant')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='pdfdocument',
            name='quiz_session',
        ),
        migrations.RemoveField(
            model_name='question',
            name='quiz_session',
        ),
        migrations.RemoveField(
            model_name='quizanalysis',
            name='attempt',
        ),
        migrations.AlterUniqueTogether(
            name='quizattempt',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='quizattempt',
            name='quiz_session',
        ),
        migrations.RemoveField(
            model_name='quizattempt',
            name='student',
        ),
        migrations.RemoveField(
            model_name='quizsession',
            name='teacher',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user',
        ),
        migrations.DeleteModel(
            name='Answer',
        ),
        migrations.DeleteModel(
            name='PDFDocument',
        ),
        migrations.DeleteModel(
            name='Question',
        ),
        migrations.DeleteModel(
            name='QuizAnalysis',
        ),
        migrations.DeleteModel(
            name='QuizAttempt',
        ),
        migrations.DeleteModel(
            name='QuizSession',
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='learning_app.quizparticipant'),
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_app.quizquestion'),
        ),
        migrations.AddField(
            model_name='livequiz',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_app.teacherprofile'),
        ),
        migrations.AlterUniqueTogether(
            name='quizanswer',
            unique_together={('participant', 'question')},
        ),
    ]
