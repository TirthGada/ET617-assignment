# Generated by Django 4.2.7 on 2025-09-22 20:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('learning_app', '0004_livequiz_quizanalytics_quizanswer_quizparticipant_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('poll_type', models.CharField(choices=[('single_choice', 'Single Choice'), ('multiple_choice', 'Multiple Choice'), ('text_response', 'Text Response'), ('rating_scale', 'Rating Scale (1-5)'), ('yes_no', 'Yes/No')], default='single_choice', max_length=20)),
                ('poll_code', models.CharField(blank=True, max_length=8, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('ended', 'Ended')], default='draft', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=True)),
                ('allow_multiple_responses', models.BooleanField(default=False)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_app.teacherprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=500)),
                ('order', models.PositiveIntegerField(default=0)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='learning_app.poll')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PollAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_responses', models.IntegerField(default=0)),
                ('response_distribution', models.JSONField(default=dict, help_text='Option -> count mapping')),
                ('average_rating', models.FloatField(blank=True, help_text='For rating polls', null=True)),
                ('response_timeline', models.JSONField(default=list, help_text='Responses over time')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('poll', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='learning_app.poll')),
            ],
        ),
        migrations.CreateModel(
            name='PollResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(blank=True, max_length=100)),
                ('student_email', models.EmailField(blank=True, max_length=254)),
                ('selected_options', models.JSONField(default=list, help_text='For choice-based polls')),
                ('text_response', models.TextField(blank=True, help_text='For text response polls')),
                ('rating_value', models.IntegerField(blank=True, help_text='For rating scale polls', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='learning_app.poll')),
            ],
            options={
                'unique_together': {('poll', 'ip_address')},
            },
        ),
    ]
